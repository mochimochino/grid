# https://sysctl-explorer.net/net/ipv4/tcp_moderate_rcvbuf/
# If set, TCP performs receive buffer auto-tuning; Enabled by default.
net.ipv4.tcp_moderate_rcvbuf=1

## http://dak1n1.com/blog/7-performance-tuning-intel-10gbe/
# Increase system IP port range to allow for more concurrent connections
net.ipv4.ip_local_port_range=1024 65535

# https://dropbox.tech/infrastructure/optimizing-web-servers-for-high-throughput-and-low-latency

# https://sysctl-explorer.net/net/ipv4/tcp_slow_start_after_idle
net.ipv4.tcp_slow_start_after_idle = 0

# Enable window scaling as defined in RFC1323 - this must be enabled
# https://sysctl-explorer.net/net/ipv4/tcp_window_scaling/
net.ipv4.tcp_window_scaling = 1

# https://sysctl-explorer.net/net/ipv4/tcp_max_syn_backlog/
# Maximal number of remembered connection requests, which have not received an acknowledgment from connecting client.
net.ipv4.tcp_max_syn_backlog = 3072

# DO NOT DISABLE!! disables window scaling and SACK options on syncookies
# Enable timestamps as defined in RFC1323 - required for > 1gbit
# https://sysctl-explorer.net/net/ipv4/tcp_timestamps/
net.ipv4.tcp_timestamps = 1

# Enable select acknowledgments
# https://sysctl-explorer.net/net/ipv4/tcp_sack/
net.ipv4.tcp_sack= 1

# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
net.ipv4.tcp_max_tw_buckets = 393216

# TCP timeout setting (socket time-out closing)
net.ipv4.tcp_fin_timeout = 5

# Number of times initial SYNs for an active TCP connection attempt will be retransmitted (def=5)
net.ipv4.tcp_syn_retries = 3

# Number of times SYNACKs for a passive TCP connection attempt will be retransmitted (def=5)
net.ipv4.tcp_synack_retries=3

# Try to close things only twice
net.ipv4.tcp_orphan_retries=2

# Keep fragments for 15 sec (default: 30)
# https://sysctl-explorer.net/net/ipv4/ipfrag_time/
net.ipv4.ipfrag_time=15

# https://sysctl-explorer.net/net/ipv4/tcp_fastopen/
# TCP fast open reduces network latency by enabling data exchange during the sender's initial TCP SYN.
# The value 3 enables fast open on client and server connections.
net.ipv4.tcp_fastopen=3

# https://sysctl-explorer.net/net/ipv4/tcp_no_metrics_save/
# By default, TCP saves various connection metrics in the route cache when the connection closes,
# so that connections established in the near future can use these to set initial conditions.
# Usually, this increases overall performance, but may sometimes cause performance degradation.
# If set, TCP will not cache metrics on closing connections.
net.ipv4.tcp_no_metrics_save = 0

# TCK keepalive
# https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
# https://sysctl-explorer.net/net/ipv4/tcp_keepalive_time
# How frequently the probes are send out. Multiplied by tcp_keepalive_probes it is time to kill not responding connection, after probes started.
net.ipv4.tcp_keepalive_time = 10

# https://sysctl-explorer.net/net/ipv4/tcp_keepalive_probes/
# How many keepalive probes TCP sends out, until it decides that the connection is broken.
net.ipv4.tcp_keepalive_probes = 5

# https://sysctl-explorer.net/net/ipv4/tcp_keepalive_intvl/
# How often TCP sends out keepalive messages when keepalive is enabled
net.ipv4.tcp_keepalive_intvl = 5