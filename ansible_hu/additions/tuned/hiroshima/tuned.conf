
[main]
summary=Hiroshima tuning profile

[cpu]

# conservative|ondemand|powersave|performance
governor=performance

# powersave|power|normal|performance
energy_perf_bias=performance

# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/monitoring_and_managing_system_status_and_performance/tuning-cpu-frequency-to-optimize-energy-consumption_monitoring-and-managing-system-status-and-performance#cpufreq-drivers_tuning-cpu-frequency-to-optimize-energy-consumption
# https://www.kernel.org/doc/Documentation/cpu-freq/intel-pstate.txt
min_perf_pct=100

## Setting C3 state sleep mode/power savings
## force_latency=cstate.id_no_zero:3|70
force_latency=cstate.id_no_zero:1|3

## https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_for_real_time/7/html/tuning_guide/chap-realtime-specific_tuning
# priority=10

## https://www.kernel.org/doc/html/latest/admin-guide/pm/cpufreq.html
# [modules]
# cpufreq_conservative=+r

## [scsi_host]
## min_power|medium_power
## alpm=medium_power

## [disk]
## apm=128
## spindown=6

[scheduler]

# DO NOT Automatically create task groups
kernel.sched_autogroup_enabled = 0

# Minimal preemption granularity for CPU-bound tasks: (default: 1 msec#  (1 + ilog(ncpus)), units: nanoseconds)
# sched_min_granularity_ns = 10000000

# The total time the scheduler will consider a migrated process "cache hot" and thus less likely to be re-migrated (system default is 500000, i.e. 0.5 ms)
# sched_migration_cost_ns = 50000000

# SCHED_OTHER wake-up granularity. (default: 1 msec#  (1 + ilog(ncpus)), units: nanoseconds)
# This option delays the preemption effects of decoupled workloads and reduces their over-scheduling.
# Synchronous workloads will still have immediate wakeup/sleep latencies.
# sched_wakeup_granularity_ns = 15000000

